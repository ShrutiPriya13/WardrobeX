.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modalContent {
  background-color: white;
  padding: 2rem;
  border-radius: 8px;
  width: 100%;
  max-width: 550px;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
}

.modalContent h2 {
  margin-top: 0;
  margin-bottom: 1.5rem;
  color: #333;
  text-align: center;
  border-bottom: 1px solid #eee;
  padding-bottom: 0.75rem;
}

.closeButton {
  position: absolute;
  top: 1rem;
  right: 1rem;
  background: none;
  border: none;
  font-size: 1.5rem;
  line-height: 1;
  cursor: pointer;
  color: #666;
  z-index: 10;
}

.closeButton:hover {
  color: #f44336;
}

/* Upload step styles */
.uploadStep {
  display: flex;
  flex-direction: column;
  margin-bottom: 1.5rem;
}

/* Details step styles */
.detailsStep {
  display: flex;
  margin-bottom: 1.5rem;
  gap: 1.5rem;
}

.detailsPreview {
  flex: 0 0 120px;
}

.thumbnailPreview {
  width: 120px;
  height: 120px;
  object-fit: contain;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 0.5rem;
  background-color: #f8f8f8;
}

.detailsForm {
  flex: 1;
}

.cropConfirmation {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  margin-top: 1rem;
}

/* Form styles */
.formGroup {
  margin-bottom: 1rem;
}

.formGroup label {
  display: block;
  margin-bottom: 0.5rem;
  font-weight: 500;
  color: #333;
}

.formGroup input,
.formGroup select,
.formGroup textarea {
  width: 100%;
  padding: 0.5rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  font-size: 1rem;
}

.formGroup textarea {
  min-height: 100px;
  resize: vertical;
}

/* Tag system styles */
.tagInputContainer {
  display: flex;
  gap: 0.5rem;
  margin-bottom: 0.5rem;
}

.tagInputContainer input {
  flex: 1;
}

.aiTagsInfo {
  display: flex;
  flex-direction: column;
  margin: 0.5rem 0;
  font-size: 0.9rem;
}

.generateTagsButton {
  padding: 0.5rem 1rem;
  background-color: #8a2be2;
  border: none;
  border-radius: 4px;
  color: white;
  cursor: pointer;
  font-weight: 600;
  align-self: flex-start;
  margin: 0.5rem 0;
  transition: all 0.2s;
}

.generateTagsButton:hover {
  background-color: #7a1cc1;
}

.generateTagsButton:disabled {
  background-color: #ccaaee;
  cursor: not-allowed;
}

.tagsLabel {
  font-size: 0.85rem;
  margin-bottom: 0.3rem;
  color: #444;
  font-weight: 500;
}

.aiTagsList {
  margin-top: 0.5rem;
}

.aiTag {
  background-color: #8a2be2;
  color: white;
}

.tagsList {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  margin-top: 0.75rem;
  padding-bottom: 0.5rem;
}

.tag {
  display: inline-flex;
  align-items: center;
  background-color: #e5e7eb;
  padding: 0.25rem 0.5rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  gap: 0.25rem;
}

.removeTagButton {
  background: none;
  border: none;
  color: #666;
  margin-left: 0.25rem;
  cursor: pointer;
  font-size: 1.2rem;
  line-height: 1;
  padding: 0 0.25rem;
}

.removeTagButton:hover {
  color: #f44336;
}

/* Crop container styles */
.cropContainer {
  margin-top: 1rem;
  border: 1px solid #ddd;
  border-radius: 4px;
  padding: 1rem;
  width: 100%;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.cropContainer h3 {
  margin-top: 0;
  margin-bottom: 0.5rem;
  color: #333;
  font-size: 1.1rem;
  align-self: flex-start;
}

.cropWrapper {
  width: 100%;
  margin-bottom: 1rem;
}

/* Fix ReactCrop styles */
.reactCropElement {
  width: 100%;
  max-width: 100%;
}

/* Override ReactCrop styles to ensure the crop selection works properly */
.cropWrapper :global(.ReactCrop) {
  width: 100%;
  position: relative;
  overflow: hidden;
  max-width: 100%;
  background-color: transparent;
}

.cropWrapper :global(.ReactCrop__crop-selection) {
  position: absolute;
  box-shadow: 0 0 0 9999em rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.5);
  z-index: 100;
}

/* Ensure the drag handles are visible and working */
.cropWrapper :global(.ReactCrop__drag-handle) {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: rgba(255, 255, 255, 0.7);
  border: 1px solid #333;
  z-index: 200;
}

.cropImage {
  display: block;
  max-width: 100%;
  object-fit: contain;
}

.cropButton {
  padding: 0.5rem 1rem;
  background-color: #2196F3;
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  width: 100%;
  max-width: 200px;
  margin-top: 0.5rem;
  font-size: 1rem;
}

.cropButton:hover {
  background-color: #0b7dda;
}

.previewContainer {
  margin-top: 1rem;
  width: 150px;
  height: 150px;
  overflow: hidden;
  border-radius: 4px;
  border: 1px solid #ddd;
  position: relative;
}

.imagePreview {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.recropButton {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: rgba(0, 0, 0, 0.7);
  color: white;
  border: none;
  padding: 0.5rem;
  cursor: pointer;
  opacity: 0;
  transition: opacity 0.2s ease;
}

.previewContainer:hover .recropButton {
  opacity: 1;
}

.buttonGroup {
  display: flex;
  gap: 1rem;
  margin-top: 1.5rem;
}

.submitButton,
.cancelButton,
.backButton {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-size: 1rem;
  font-weight: 500;
  flex: 1;
}

.submitButton {
  background-color: #4CAF50;
  color: white;
}

.submitButton:hover {
  background-color: #45a049;
}

.submitButton:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.cancelButton {
  background-color: #f44336;
  color: white;
}

.cancelButton:hover {
  background-color: #da190b;
}

.backButton {
  background-color: #607d8b;
  color: white;
}

.backButton:hover {
  background-color: #455a64;
}

.cancelButton:disabled,
.backButton:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

.successMessage {
  text-align: center;
}

.cropSuccessNotification {
  margin-top: 0.5rem;
  padding: 0.5rem;
  background-color: #4CAF50;
  color: white;
  border-radius: 4px;
  text-align: center;
  animation: fadeOut 3s forwards;
}

@keyframes fadeOut {
  0% { opacity: 1; }
  70% { opacity: 1; }
  100% { opacity: 0; }
}

.aspectToggle {
  margin-bottom: 0.75rem;
  display: flex;
  align-items: center;
}

.aspectToggle label {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  cursor: pointer;
  font-size: 0.9rem;
  color: #555;
}

.aspectToggle input[type="checkbox"] {
  width: auto;
  margin: 0;
  cursor: pointer;
}

/* Media queries for responsive design */
@media (max-width: 768px) {
  .modalContent {
    max-width: 90%;
    padding: 1.5rem;
  }
  
  .detailsStep {
    flex-direction: column;
    gap: 1rem;
  }
  
  .detailsPreview {
    display: flex;
    justify-content: center;
  }
  
  .cropContainer {
    padding: 0.75rem;
  }
  
  .cropImage {
    max-width: 100%;
  }
} 